{"version":3,"sources":["F:/my-template/angular/src/app/views/ng/typescript/func.component.ts","F:/my-template/angular/src/app/views/ng/typescript/interface.component.ts","F:/my-template/angular/src/app/views/ng/typescript/type.component.ts","F:/my-template/angular/src/app/views/ng/typescript/typescript.module.ts"],"names":[],"mappings":"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","file":"typescript.module.chunk.js","sourcesContent":["// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        </div>\n        <div class=\"lh30 mvvm-code mt10\">\n        \t<dl class=\"mvvm-list samebox\">\n\t        \t<dt>定义函数反回值类型: 若返回值为 <b>null</b>/<b>undefined</b> 匹配任何类型</dt>\n\t        \t<dd>my()<b>:number</b>｛｝ 返回值为<s>数字</s></dd>\n\t        \t<dd>my()<b>:string</b>｛｝ 返回值<s>字符串</s></dd>\n\t        \t<dd>my()<b>:boolean</b>｛｝ 返回值<s>布尔值</s></dd>\n\t        \t<dd>my()<b>:object</b>｛｝ 返回值<s>对象 ｛｝[ ]</s></dd>\n\t        \t<dd>my()<b>:string/string/boolean/object/any[]</b>｛｝ 返回值为<s>数组</s></dd>\n\t        \t<dd>my()<b>:void</b>｛｝ <s>无返回值</s></dd>\n\t        \t<dd>my()<b>:never</b>｛throw new Error();｝ 是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型</dd>\n\t        </dl>\n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>定义函数参数类型: </dt>\n\t        \t<dd>my(a<b>?:string</b>,b<b>?:number</b>,c<b>?:boolean</b>,d<b>?:object</b>,e<b>?:string[]</b>)｛｝ </dd>\n\t        \t<dd>@Output() myclick = new EventEmitter<b>&lt;string&gt;</b>(); #myclick 函数的参数只能是字符串</dd>\n\t        </dl>\n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>定义可选参数:</dt>\n\t        \t<dd>my(x<b>?:number</b>)｛｝ </dd>\n\t        \t<dd>my(x<b>?:number[]</b>)｛｝ </dd>\n\t        </dl>\n        </div>\n    `\n})\n\nexport class FuncComponent{\n\tconstructor(private router: RouterService){ }\n\t\n\ta1():number{ return 1 }\n\ta2():string{ return '1' }\n\ta3():boolean{ return false }\n\ta4():object{ return {} }\n\ta5():object{ return [] }\n\ta6():string[]{ return ['1'] }\n\ta7():void{ }\n\ta8():never{ throw new Error(); }\n\t\n\tb1(a:string,b:number,c:boolean,d:object,e:string[],f?:any[]){\n\t\tconsole.log(a);\n\t\tconsole.log(b)\n\t\tconsole.log(c)\n\t\tconsole.log(d)\n\t\tconsole.log(e)\n\t}\n\t\n\t\n\t\n\tngOnInit(){\n\t\tthis.b1('1',2,true,{a:0},['1','2'])\n\t}\n\tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/typescript/func.component.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/typescript/func.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== 定义接口\nexport interface MyInterface {\n\t//canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean\t// 定义函数反回值\n\tfunc:()=> string[],\n\tid:number,\n\tname:string\n}\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        </div>\n        <div class=\"lh30 mvvm-code mt10\">\n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>定义接口: </dt>\n\t        \t<dd>my(a<b>?:string</b>,b<b>?:number</b>,c<b>?:boolean</b>,d<b>?:object</b>,e<b>?:string[]</b>)｛｝ </dd>\n\t        \t<dd>@Output() myclick = new EventEmitter<b>&lt;string&gt;</b>(); #myclick 函数的参数只能是字符串</dd>\n\t        </dl>\n        </div>\n        <pre class=\"mvvm-pre samebox mt10\">\n\t<b>export interface MyInterface ｛\n\t\t//canDeactivate: () => Observable&lt;boolean&gt; | Promise&lt;boolean&gt; | boolean\t// 定义函数反回值\n\t\tfunc:()=> string[],\n\t\tid:number,\n\t\tname:string\n\t｝</b>\n\t\n\t<b>obj:MyInterface = ｛\n\t\tid:123,\n\t\tfunc()｛ return ['1'] ｝\n\t\tname: 'reactjs'\n\t｝</b>\n\t\t</pre>\n    `\n})\n\nexport class InterfaceComponent{\n\tconstructor(private router: RouterService){ }\n\t\n\tobj:MyInterface = {\n\t\tid:123,\n\t\tfunc(){ return ['1'] },\n\t\tname: 'reactjs'\n\t}\n\t\n\tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/typescript/interface.component.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/typescript/interface.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// =====================================================\nenum Color { red=1,green=3,blue=6 }\nclass Data{\n\tconstructor(id:number,name:string){}\n}\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        </div>\n        <div class=\"lh30 mvvm-code mt10\">\n\t        <dl class=\"mvvm-list mvvm-list-1 samebox\">\n\t        \t<dt>简单强类型: </dt>\n\t        \t<dd>const my<b>:boolean</b> <span>= true/false</span> <s># 布尔值</s></dd>\n\t        \t<dd>const my<b>:number</b> <span>= 1</span> <s># 数字</s></dd>\n\t        \t<dd>const my<b>:string</b> <span>= '字符串'</span> <s># 字符串</s></dd>\n\t        \t<dd>const my<b>:object</b> <span>= ｛｝| [ ]</span> <s># 对象</s></dd>\n\t        \t<dd>const my<b>:array</b> <span>= []</span> <s># 数组</s></dd>\n\t        \t<dd>const my<b>:any</b> <span>= 1</span> <s># 以上任意数据类型</s></dd>\n\t        </dl>\n\t        <dl class=\"mvvm-list mvvm-list-1 samebox mt10\">\n\t        \t<dt>Array + type + []: </dt>\n\t        \t<dd>const my<b>:number[]</b> <span>= [1,2,3]</span> <s># 数字数组</s></dd>\n\t        \t<dd>const my<b>:string[]</b> <span>= ['1','2','3']</span> <s># 字符串数组</s></dd>\n\t        \t<dd>const my<b>:object[]</b> <span>= [｛a:0｝,[0,1]]</span> <s># 对象数组</s></dd>\n\t        \t<dd>const my<b>:any[]</b> <span>= []</span> <s># 以上任意数据类型数组</s></dd>\n\t        </dl>\n\t        <dl class=\"mvvm-list mvvm-list-1 samebox mt10\">\n\t        \t<dt>Array + 泛型的数组类型: </dt>\n\t        \t<dd>const my<b>:Array&lt;number&gt;</b> <span>= [1,2,3]</span> <s># 数字数组</s></dd>\n\t        \t<dd>const my<b>:Array&lt;string&gt;</b> <span>= ['1','2','3']</span> <s># 字符串数组</s></dd>\n\t        \t<dd>const my<b>:Array&lt;object&gt;</b> <span>= [｛a:0｝,[0,1]]</span> <s># 对象数组</s></dd>\n\t        \t<dd>const my<b>:Array&lt;any&gt;</b> <span>= []</span> <s># 以上任意数据类型数组</s></dd>\n\t        </dl>\n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>Enum （枚举）: </dt>\n\t        \t<dd><b>enum Color ｛ red=1,green=3,blue=6 ｝</b></dd>\n\t        \t<dd><b>e1:Color = Color.green</b></dd>\n\t        \t<dd><b>e2:number = Color.green</b></dd>\n\t        </dl>\n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>联合类型: </dt>\n\t        \t<dd>const my<b>:string[]|number|boolean</b> <span>= [1,2,3]</span> 数组字符串或数字</dd>\n\t        </dl>\n        </div>\n    `,\n    styles:[`\n    \t.mvvm-list-1 b{display:inline-block;width:130px;margin-left:5px;}\n    \t.mvvm-list-1 span{display:inline-block;width:130px;color:#33691E;white-space:nowrap;}\n    `]\n})\n\nexport class TypeComponent{\n\tconstructor(private router: RouterService){ }\n\t/* 简单类型 */\n\ta:boolean\t= true;\n\tb:number\t= 1;\n\tc:string\t= 'string';\n\td:object\t= {};\n\te:object = []\n\t/* 数组 */\n\tf:number[] = [0,1,2]\n\tg:string[] = ['0','1','2']\n\th:object[] = [{a:0},[0,1]]\n\ti:any[] = [0,1,2]\n\t/* 泛型数组 */\n\tj:Array<number> = [0,1,2]\n\tk:Array<string> = ['0','1','2']\n\tl:Array<object> = [{a:0},[0,1]]\n\tm:Array<any> = [0,1,2]\n\t/* Enum （枚举） */\n\te1:Color = Color.green\n\te2:number = Color['red']\n\t/* 联合声明 */\n\tf1:string[] | number | boolean = true;\n\tngOnInit(){\n\t\tconsole.log(this.e1)\n\t\tconsole.log(this.e2)\n\t}\n\tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/typescript/type.component.ts';\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/typescript/type.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n// ===================================================== 同一个模块的组件\nimport { TypeComponent } from './type.component';\nimport { FuncComponent } from './func.component';\nimport { InterfaceComponent } from './interface.component';\n// ======================================================================== NgModule\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(\n\t\t\t[\n\t\t\t\t{ path: 'type', component: TypeComponent },\n\t\t\t\t{ path: 'func', component: FuncComponent },\n\t\t\t\t{ path: 'interface', component: InterfaceComponent },\n\t\t\t]\n\t\t)\n\t],\n\tdeclarations: [\n\t\tTypeComponent,\n\t\tFuncComponent,\n\t\tInterfaceComponent\n\t],\n\texports: [ RouterModule ]\n})\nexport class TypescriptModule { }\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/typescript/typescript.module.ts"],"sourceRoot":"webpack:///"}
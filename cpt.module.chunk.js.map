{"version":3,"sources":["F:/my-template/angular/src/app/views/ng/component/communication/id.component.ts","F:/my-template/angular/src/app/views/ng/component/communication/input.component.ts","F:/my-template/angular/src/app/views/ng/component/communication/output.component.ts","F:/my-template/angular/src/app/views/ng/component/communication/viewchild.component.ts","F:/my-template/angular/src/app/views/ng/component/communication/viewchildren.component.ts","F:/my-template/angular/src/app/views/ng/component/cpt-life.component.ts","F:/my-template/angular/src/app/views/ng/component/cpt.module.ts","F:/my-template/angular/src/app/views/ng/component/layout.component.ts"],"names":[],"mappings":"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","file":"cpt.module.chunk.js","sourcesContent":["// ===================================================== \nimport { Component, ViewChildren } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== 子组件\n@Component({\n\tselector:'viewid',\n\ttemplate: `\n\t\t<div class=\"lh30 mvvm-code\">\n\t\t\t子组件\n\t\t</div>\n\t`\n})\nexport class Child5Component{\n\tname = '子组件属性';\n\tmsg = 'angular';\n\t\n\tdosomething(){\n\t\talert('子组件的方法')\n\t}\n}\n\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"module()\">所在模块</button>\n        </div>\n        \n        <div class=\"lh30 mvvm-code samebox mt10\">\n        \t<dl class=\"mvvm-list\">\n\t        \t<dt>模板引用变量获取子组件, 在父组件中: </dt>\n\t        \t<dd><b>#id</b></dd>\n\t        \t<dd><b>ref-id</b></dd>\n\t        </dl>\n        </div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        {{ child.name }}\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <button (click)=\"child.dosomething()\" class=\"btn-default\">调用子组件的方法</button>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <viewid #child></viewid>\n    `\n})\n\nexport class IdComponent{\n\t\n\tconstructor(private router: RouterService){ }\n\t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/communication/id.component.ts';\n\t}\n  \tmodule(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/cpt.module.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/component/communication/id.component.ts","// ===================================================== \nimport { Component, Input } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== 子组件\n@Component({\n\tselector:'test',\n\ttemplate: `\n\t\t<div class=\"mvvm-code mvvm-box-2\">\n\t\t\t<h3>这是子组件</h3>\n\t\t\t<div>{{name}}</div>\n\t\t\t<div>{{parent.msg2}}</div>\n\t\t\t<div>{{user}}</div>\n\t\t\t<div>{{hello}}</div>\n\t\t\t<div>{{woman}}</div>\n\t\t\t<div>{{woman}}</div>\n\t\t\t<div>{{sex}}</div>\n\t\t</div>\n\t`,\n\tinputs:['user','hello:fuck']\n})\nexport class ChildComponent{\n\tuser;\n\thello;\n\t\n\t@Input() name:string;\n\t@Input() parent:any;\n\t@Input('girl') woman:string;\n\t\n\tsex;\n\t@Input() set run(v:any){\t// 声明接收父组件变量的属性名, 并自动处理接收过来的 变量\n\t\tthis.sex = '子组件处理父组件传递的数据: ' + v;\n\t}\n}\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"module()\">所在模块</button>\n        </div>\n        <div class=\"lh30 mvvm-code samebox mtb10\">\n        \t<dl class=\"mvvm-list\">\n\t        \t<dt>@Input() 子取父组件传递来的属性变量, 在子组件中: </dt>\n\t        \t<dd><b>@Input() hello:string</b>: 声明输入属性 , 在父组件中 ，子组件接收父级的的变量, <b>[hello]=\"父级的变量\"</b></dd>\n\t        \t<dd><b>@Input('sexAlias') sex:string</b>: 别名 sexAlias 用于父组件中子组件上, [sexAlias]=\"父级的变量\", sex 用于子组件 this.sex</dd>\n\t        \t<dd><b>inputs : ['name','user:userAlias','self']</b>: 挂在子组件的 @Component</dd>\n\t        \t<dd><b>@Input() set defaultName(v:any)｛｝</b>: set 使用函数自动运行, 声明接收父组件变量的属性名, 并自动处理接收过来的 变量</dd>\n\t        </dl>\n        </div>\n       \n        <test\n        \t[name]=\"msg1\"\n        \t[parent]=\"this\"\n        \t[user]=\"msg3\"\n        \t[fuck]=\"msg4\"\n        \t[girl]=\"'[girl]=str 获取父组件传入的字符串变量'\"\n        \t\n        \t[run]=\"'默认自动运行'\"\n        ></test>\n    `\n})\n\nexport class InputComponent{\n\tmsg1:string = '[name]=\"msg1\" 父组件传入属性' ;\n\tmsg2:string = '[parent]=\"this\" 将父组件 this 对象传给子组件, parent 只能获取属性,不能获取方法';\n\tmsg3:string = '[user]=\"msg3\" user 在  inputs 里声明';\n\tmsg4:string = '[fuck]=\"msg4\" 用别名获取父组件属性';\n\n  \tconstructor(private router: RouterService){ }\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/communication/input.component.ts';\n\t}\n\tmodule(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/cpt.module.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/component/communication/input.component.ts","// ===================================================== \nimport { Component, Output, EventEmitter } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== 子组件\n@Component({\n\tselector:'tests',\n\ttemplate: `\n\t\t<div class=\"mvvm-code mvvm-box-2\">\n\t\t\t<h3>这是子组件</h3>\n\t\t\t<div class=\"mt10\"><a (click)=\"change1()\" class=\"btn-default\">@Output传入父组件的变量</a></div>\n\t\t\t<div class=\"mt10\"><a (click)=\"change2()\" class=\"btn-default\">@Output绑定一个别名监听</a></div>\n\t\t\t<div class=\"mt10\"><a (click)=\"change3()\" class=\"btn-default\">outputs : ['cick'] 绑定事件</a></div>\n\t\t\t<div class=\"mt10\"><a (click)=\"change4()\" class=\"btn-default\">outputs : ['dick:sick'] 绑定一个别名监听</a></div>\n\t\t</div>\n\t`,\n\toutputs : ['cick','dick:sick']\n})\nexport class Child2Component{\n\t@Output() aick = new EventEmitter<string>();\t\t\t// 暴露事件生产者\n\t\n\t@Output('myClick') bick = new EventEmitter<string>();\t// myClick 为别名\n\t\n\tcick = new EventEmitter<string>(); // 声明 outputs 事件\n\tdick = new EventEmitter<string>();\n\n\tchange1(){\n\t\tthis.aick.emit(); // 触发父组件自定义绑定事件\n\t}\n\tchange2(){\n\t\tthis.bick.emit('@Output(\"事件出发，发射参数变量给父组件函数'); // 事件出发，发射参数变量给父组件函数\n\t}\n\tchange3(){\n\t\tthis.cick.emit('outputs 绑定监听事件');\n\t}\n\tchange4(){\n\t\tthis.dick.emit('outputs 绑定别名监听事件');\n\t}\n}\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"module()\">所在模块</button>\n        </div>\n        \n        <div class=\"lh30 mvvm-code samebox mt10\">\n        \t<dl class=\"mvvm-list\">\n\t        \t<dt>@Output('别名') 监听父组件, 在子组件中: </dt>\n\t        \t<dd><b>this.aick.emit()</b>: 触发父组件事件</dd>\n\t        </dl>\n        </div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mb10\">{{msg}}</div>\n        \n        <tests\n        \t(aick)=\"show(str)\" \n\t\t\t(myClick)=\"show($event)\"\n\t\t\t(cick)=\"show($event)\"\n\t\t\t(sick)=\"show($event)\"\n        ></tests>\n    `\n})\n\nexport class OutputComponent{\n\t\n\tstr = '发射父组件变量';\n\tmsg = '@Output属性输出：暴露事件生产者，比如 EventEmitter 对象';\n\t\n  \tconstructor(private router: RouterService){ }\n  \t\n  \tshow(m:string){\n\t\tthis.msg = m;\n\t\tconsole.log(m)\n\t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/communication/output.component.ts';\n\t}\n\tmodule(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/cpt.module.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/component/communication/output.component.ts","// ===================================================== \nimport { Component, ViewChild } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== 子组件\n@Component({\n\tselector:'test-viewchild',\n\ttemplate: `\n\t\t<div class=\"mvvm-code mvvm-box-2\">\n\t\t\t<h3>这是子组件</h3>\n\t\t</div>\n\t`\n})\nexport class Child3Component{\n\tname = '子组件属性';\n\tdoSomething(){\n\t\talert('子组件方法')\n\t}\n}\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"module()\">所在模块</button>\n        </div>\n        \n        <div class=\"lh30 mvvm-code samebox mt10\">\n        \t<dl class=\"mvvm-list\">\n\t        \t<dt>@ViewChild('要获取的子组件') 父取子, 在父组件中: </dt>\n\t        \t<dd><b>@ViewChild(Child3Component) private test:Child3Component;</b> 声明要通信的子组件</dd>\n\t        \t<dd><b>@ViewChild('fx') public test:Child3Component;</b> #id 声明</dd>\n\t        \t<dd><b>@ViewChild('fx') test:Child3Component;</b> ref-id 声明</dd>\n\t        </dl>\n        </div>\n        \n        <hr class=\"_mt10_mb10x\">\n        <button (click)=\"getChild()\" class=\"btn-default\">获取子组件的方法</button>\n        <button (click)=\"getChild2()\" class=\"btn-default\">获取子组件的属性</button>\n        <hr class=\"_mt10_mb10x\">\n        <test-viewchild ref-fx></test-viewchild>\n    `\n})\n\nexport class ViewChildComponent{\n\t\n\t@ViewChild(Child3Component) private test:Child3Component;\t\t// 参数取：子组件类\n\t//@ViewChild('fx') test:Child3Component;\t\t\t\t// 参数取：父组件中子组件的 #id 对象\n\t//@ViewChild('fx') test:Child3Component;\t\t\t\t// 参数取：父组件中子组件的 ref-fx 对象\n\t\n  \tconstructor(private router: RouterService){ }\n  \t\n  \tgetChild(){\n\t\tthis.test.doSomething();\n\t}\n  \tgetChild2(){\n  \t\talert(this.test.name)\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/communication/viewchild.component.ts';\n\t}\n\tmodule(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/cpt.module.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/component/communication/viewchild.component.ts","// ===================================================== \nimport { Component, ViewChildren } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== 子组件\n@Component({\n\tselector:'viewchildren',\n\ttemplate: `\n\t\t<div class=\"mvvm-code mvvm-box-2\">\n\t\t\t<h3>这是子组件</h3>\n\t\t</div>\n\t`\n})\nexport class Child4Component{\n\tname = '子组件属性';\n\tmsg = 'angular';\n\tdoSomething(index:any) {\n\t\tlet $this = this;\n\t\t// 此处需延时加载，否则，检查改变与当前改变会冲突，代码执行正确，但会导致报错\n\t\tsetTimeout(()=>{\n\t\t\tswitch(index){\n\t\t\t\tcase 0:\n\t\t\t\t\t$this.name = '这是第一个组件的变量 name';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\t$this.name = '这是第二个组件的变量 name';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t$this.name = '这是第三个组件的变量 name';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$this.name = 'no value';\n\t\t\t}\n\t\t})\n\t}\n}\n\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"module()\">所在模块</button>\n        </div>\n        \n        <div class=\"lh30 mvvm-code samebox mt10\">\n        \t<dl class=\"mvvm-list\">\n\t        \t<dt>@ViewChildren('要获取的子组件') 父取多子(同一个子组件调用多次), 在父组件中: </dt>\n\t        \t<dd><b>@ViewChildren(Child4Component) children:Child4Component</b> 声明要通信的子组件</dd>\n\t        \t<dd><b>@ViewChildren('child,fx') children:Child4Component;</b> #fx, ref-fx 声明</dd>\n\t        \t<dd><b>@ViewChildren(Child4Component) children</b> 类型可省略</dd>\n\t        </dl>\n        </div>\n        \n        <hr class=\"_mt10_mb10x\">\n        <button (click)=\"getChild()\" class=\"btn-default\">获取子组件的相同属性不同值</button>\n        <button (click)=\"getChild2()\" class=\"btn-default\">获取子组件的不相同属性</button>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <viewchildren #child></viewchildren>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <viewchildren ref-fx></viewchildren>\n        \n        <hr class=\"_mt10_mb10x\">\n        <div class=\"mvvm-pre\">子组件的属性: <s>{{childs | json }}</s></div>\n    `\n})\n\nexport class ViewChidrenComponent{\n\tchilds = {}\n\t\n\t//@ViewChildren(Child4Component) children:Child4Component;\t\t\t// 参数取：Child4Component\n\t@ViewChildren('child,fx') children:Child4Component;\t\t\t\t\t// 参数取：#id\n\t\n  \tconstructor(private router: RouterService){ }\n  \t\n  \tgetChild(){\n  \t\tlet arr:any = this.children; // 无法连写 this.children.map()，否则 npm start 会报错\n  \t\tthis.childs = {};\n\t\tarr.map((v,i)=>{\n  \t\t\tthis.childs[i] = v;\n  \t\t})\n\t}\n  \t\n  \tgetChild2(){\n  \t\tlet arr:any = this.children; // 无法连写 this.children.map()，否则 npm start 会报错\n  \t\tarr.map((v,i)=>{\n  \t\t\tv.doSomething(i);\n  \t\t})\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/communication/viewchildren.component.ts';\n\t}\n\tmodule(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'ng/component/cpt.module.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/component/communication/viewchildren.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"module()\">所在模块</button>\n        </div>\n\n\t\t<div class=\"lh30 mvvm-code samebox mt10\">\n        \t<dl class=\"mvvm-list\">\n\t        \t<dt>组件生命周期: </dt>\n\t        \t<dd><b>ngOnInit()</b>：在Angular初始化数据绑定输入属性之后初始化组件/指令。在第一次ngOnChanges之后</dd>\n\t        \t<dd><b>ngAfterViewInit()</b>：在Angular创建了组件视图之后</dd>\n\t        \t<dd><b>ngOnChanges()</b>：Angular设置数据绑定输入属性后的响应。该方法接收一个changes对象，包含当前值和变化前的值。在ngOnInit之前，当数据绑定输入属性的值发生变化时</dd>\n\t        \t<dd><b>ngDoCheck()</b>：每次Angular变化检测时</dd>\n\t        \t<dd><b>ngAfterContentInit()</b>：在Angular将外部内容放到视图内之后</dd>\n\t        \t<dd><b>ngAfterContentChecked()</b>：在Angular检测放到视图内的外部内容的绑定后</dd>\n\t        \t<dd><b>ngAfterViewChecked()</b>：在Angular检测了组件视图的绑定之后</dd>\n\t        \t<dd><b>ngOnDestroy()</b>：在Angular销毁组件/指令之前的清理工作。取消订阅监控对象和取消事件处理函数，以避免内存泄漏</dd>\n\t        </dl>\n        </div>\n    `\n})\n\nexport class CptLifeComponent{\n\n  \tconstructor(private router: RouterService){ }\n  \t\n  \t// 在Angular初始化数据绑定输入属性之后初始化组件/指令。在第一次ngOnChanges之后\n  \t// 执行一次\n  \tngOnInit(){\n  \t\tconsole.log('ngOnInit')\n  \t}\n  \t// 在Angular创建了组件视图之后, 显示了父组件视图之后才能访问\n  \t// jq dom 操作\n  \t// 执行一次\n  \tngAfterViewInit(){\n  \t\tconsole.log('ngAfterViewInit')\n  \t}\n  \t// Angular设置数据绑定输入属性后的响应。该方法接收一个changes对象，包含当前值和变化前的值。在ngOnInit之前，当数据绑定输入属性的值发生变化时\n  \t// 执行一次\n  \tngOnChanges(){\n  \t\tconsole.log('ngOnChanges')\n  \t}\n  \t// 每次Angular变化检测时\n  \t// 执行多次\n  \tngDoCheck(){\n  \t\tconsole.log('ngDoCheck')\n  \t}\n  \t// 在Angular将外部内容放到视图内之后\n  \t// 执行一次\n  \tngAfterContentInit(){\n  \t\tconsole.log('ngAfterContentInit')\n  \t}\n  \t// 在Angular检测放到视图内的外部内容的绑定后\n  \t// 执行多次\n  \tngAfterContentChecked(){\n  \t\tconsole.log('ngAfterContentChecked')\n  \t}\n  \t// 在Angular检测了组件视图的绑定之后\n  \t// 执行多次\n  \tngAfterViewChecked(){\n  \t\tconsole.log('ngAfterViewChecked')\n  \t}\n  \t// 在Angular销毁组件/指令之前的清理工作。取消订阅监控对象和取消事件处理函数，以避免内存泄漏，离开页面处理的代码\n  \t// 执行一次\n  \tngOnDestroy(){\n  \t\tconsole.log('ngOnDestroy')\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/component/cpt-life.component.ts';\n\t}\n\tmodule(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/component/cpt.module.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/component/cpt-life.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule }   from '@angular/common';\n// ===================================================== 同一个模块的组件\nimport { CptLifeComponent } from './cpt-life.component';\nimport { LayoutComponent } from './layout.component';\n// 组件通信\nimport { InputComponent, ChildComponent } from './communication/input.component';\nimport { OutputComponent, Child2Component } from './communication/output.component';\nimport { ViewChildComponent, Child3Component } from './communication/viewchild.component';\nimport { ViewChidrenComponent, Child4Component } from './communication/viewchildren.component';\nimport { IdComponent, Child5Component } from './communication/id.component';\n// ======================================================================== NgModule\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(\n\t\t\t[\n\t\t\t\t{ path: 'cpt-life', component: CptLifeComponent },\n\t\t\t\t{ path: 'layout', component: LayoutComponent },\n\t\t\t\t\n\t\t\t\t{ path: 'input', component: InputComponent },\n\t\t\t\t{ path: 'output', component: OutputComponent },\n\t\t\t\t{ path: 'viewchild', component: ViewChildComponent },\n\t\t\t\t{ path: 'viewchildren', component: ViewChidrenComponent },\n\t\t\t\t{ path: 'id', component: IdComponent }\n\t\t\t]\n\t\t)\n\t],\n\tdeclarations: [\n\t\tCptLifeComponent,\n\t\tLayoutComponent,\n\t\t\n\t\tChildComponent,\n\t\tInputComponent,\n\t\tOutputComponent,Child2Component,\n\t\tViewChildComponent,Child3Component,\n\t\tViewChidrenComponent, Child4Component,\n\t\tIdComponent,Child5Component\n\t],\n\texports: [ RouterModule ]\n})\nexport class CptModule { }\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/component/cpt.module.ts","// ===================================================== \nimport { Component, ViewEncapsulation } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"module()\">所在模块</button>\n        </div>\n        \n        <div class=\"lh30 mvvm-code samebox mt10\">\n        \t<dl class=\"mvvm-list\">\n\t        \t<dt>组件基本格式: </dt>\n\t        \t<dd><b>moduleId: module.id</b>：每次Angular变化检测时</dd>\n\t        </dl>\n        </div>\n        \n        <pre class=\"mvvm-pre samebox mt10\">\n@Component(｛\n\t<b>moduleId: module.id</b>,\t\t\t\t# 解析样式表和模板的在本组件相对路径\n\t<b>selector</b>: 'app-root,a[a-btn],b[b-btn]',\t\t\t# 组件层的 html 元素，可自定义，也可使用内置 html，如 div。\n\t<b>exportAs</b>: 'aBtn,bBtn',\t\t\t# 将一个组件导出多个名字，可以让组件已一个新名字来使用而达到不破坏现有代码的目的\n\t<b>template</b>: '',\t\t\t\t\t# 内部模板\n\t<b>templateUrl</b>: '',\t\t\t\t\t# 外部模板\n\t\n\t<b>encapsulation: ViewEncapsulation.None</b>,\t# 将局部样式变为全局样式,去掉限制\n\t<b>styles</b>: [''],\t\t\t\t\t# 内部样式\n\t<b>styleUrls</b>: [''],\t\t\t\t\t# 外部样式\n\t<b>preserveWhitespace:true/false</b>,\t# 通过编译器，模板开发中的制表符、换行符、空格等是否原样的保留下来\n\t\n\t<b>animations</b>: [Animation]\t\t\t# 加载动画模块\n｝)\n        </pre>\n    `\n})\n\nexport class LayoutComponent{\n\n  \tconstructor(private router: RouterService){ }\n  \t\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/component/layout.component.ts';\n\t}\n\tmodule(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/component/cpt.module.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/component/layout.component.ts"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["F:/my-template/angular/src/app/services/upload.service.ts","F:/my-template/angular/src/app/views/ng/form/checkbox-all-id.component.ts","F:/my-template/angular/src/app/views/ng/form/checkbox-all.component.ts","F:/my-template/angular/src/app/views/ng/form/checkbox.component.ts","F:/my-template/angular/src/app/views/ng/form/file-upload.component.ts","F:/my-template/angular/src/app/views/ng/form/form.component.ts","F:/my-template/angular/src/app/views/ng/form/form.module.ts","F:/my-template/angular/src/app/views/ng/form/template-var.component.ts","F:/my-template/angular/src/app/views/ng/form/validate-form-builder.component.ts","F:/my-template/angular/src/app/views/ng/form/validate-form-group.component.ts","F:/my-template/angular/src/app/views/ng/form/validate-inner.component.ts"],"names":[],"mappings":"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","file":"form.module.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpService } from 'app/services/http.service';\n// ===================================================== 公共函数\n@Injectable()\nexport class UploadService {\n\t\n\tconstructor(private http:HttpService){}\n\t\n\tgetUploadFileInfo(event){\n\t\tlet stack = [];\n\t\tlet files = event.target.files;\n\t\t\n\t\tlet group = Object.keys(files);\n\t\t\n\t\tgroup.map((v,i)=>{\n\t\t\tstack.push(files[v])\n\t\t})\n\t\n\t\treturn {\n\t\t\tfiles : files,\n\t\t\tlist : stack,\n\t\t\tlength : stack.length\n\t\t}\n\t}\n\timgType = ['jpg','png','jpeg','gif'];\n\tisType(fileName,mimeType?:any){\n\t\t// 拼接正则表达式\n\t\tlet str = '';\n\t\tlet mtype = mimeType || this.imgType\n\t\tmtype.map((v,i)=>{\n\t\t\tif(mtype.length-1 == i){\n\t\t\t\tstr += '\\\\.' + v + '$'\n\t\t\t}else{\n\t\t\t\tstr += '\\\\.' + v + '$|'\n\t\t\t}\n\t\t})\n\t\tlet reg = new RegExp(str,'gi');\n\t\treturn reg.test(fileName)\n\t}\n\t\n\t// 选择文件并做处理判断\n\tfileSelect(files,option?:any){\n\t\tlet list = this.http.$fn.isArray(files.list) ? files.list : [];\n\t\t\n\t\tlet opt = {\n\t\t\tmaxSize: 1024*2024,\n\t\t\ttype: this.imgType\n\t\t}\n\t\t\n\t\tObject.assign(opt,option);\n\t\t\n\t\tlet yesGroup = list.filter(v => this.isType(v.name,opt.type) && v.size <= opt.maxSize );\n\t\tlet uploadGroup = {}\n\t\t\n\t\tyesGroup.map((v,i)=>{\n\t\t\tuploadGroup[i] = v;\n\t\t})\n\t\t\n\t\tlet result =  {\n\t\t\tyesSize :  list.filter(v => v.size <= opt.maxSize ), \t\t// 大小合适\n\t\t\tnoSize :  list.filter(v => v.size > opt.maxSize ),\t\t\t// 过大\n\t\t\t\n\t\t\tyesType :  list.filter(v => this.isType(v.name,opt.type) ),\t// 格式正确\n\t\t\tnoType :  list.filter(v => !this.isType(v.name,opt.type) ),\t// 格式有误\n\t\t\t\n\t\t\tresult :  uploadGroup,\t// 符合上传条件文件\n\t\t\tfiles : files.files,\n\t\t\tlist : list\n\t\t}\n\n\t\treturn result;\n\t}\n\t// 验证上传文件\n\tvalidatorUploader(files,config){\n\t\t// 开始上传\n\t\tlet upload = this.fileSelect(files,config);\n\t\t\n\t\tlet err = {}\n\t\tif(upload.list.length == 0){\n\t\t\terr['errcode'] = 1;\n\t\t\terr['msg'] = '请选择你要上传的文件';\n\t\t\tconsole.log('请选择你要上传的文件');\n\t\t\treturn err;\n\t\t}\n\t\tif(upload.noSize.length > 0){\n\t\t\terr['errcode'] = 2;\n\t\t\terr['msg'] = '文件超过上传限制大小';\n\t\t\tconsole.log('文件超过上传限制大小');\n\t\t\treturn err;\n\t\t}\n\t\tif(config.img){\n\t\t\tif(upload.noType.length > 0){\n\t\t\t\terr['errcode'] = 3;\n\t\t\t\terr['msg'] = '文件上传格式不正确';\n\t\t\t\tconsole.log('文件上传格式不正确');\n\t\t\t\treturn err;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn err\n\t}\n\t// FileReader 上传数据\n\tfileReaderUploader(files,config){\n\t\treturn new Promise((resolve,reject)=>{\n\t\t\tlet err = this.validatorUploader(files,config);\n\t\t\t\n\t\t\tif(this.http.$fn.hasObject(err)){\n\t\t\t\tresolve({data:null,err:err});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tlet $this = this;\n\t\t\tlet api = config.imgApi;\n\t\t\tlet file = files.files[0];\n\t\t\t\n\t\t\tlet reader = new FileReader();\n\t\t\treader.onload = function (e) {\n\t\t\t\tlet param:any = { base64stream : this.result };\n\t\t\t\t// 统一上传\n\t\t\t\t$this.http.post(api,param).then(data=>{\n\t\t\t\t\tresolve({ data:data, err:null })\n\t\t\t\t},data=>{\n\t\t\t\t\treject(data)\n\t\t\t\t\tconsole.log('上传失败')\n\t\t\t\t})\n\t        }\n\t\t\treader.readAsDataURL(file);\n\t\t\t//reader.readAsText(file[0]);\n\t\t})\n\t}\n\t// FormData 上传数据\n\tformDataUploader(files,config){\n\t\treturn new Promise((resolve,reject)=>{\n\t\t\tlet err = this.validatorUploader(files,config);\n\t\t\t\n\t\t\tif(this.http.$fn.hasObject(err)){\n\t\t\t\tresolve({data:null,err:err});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet fd = new FormData();\n\n\t        fd.append(\"file\", files.files[0]);\n\t        \n\t        console.log(fd.get('file'))\t// 获取 formData 上的隐藏数据\n\t      \n\t        this.http.post(config.url,fd).then(data=>{\n\t\t\t\tresolve({ data:data, err:null })\n\t\t\t},data=>{\n\t\t\t\treject(data)\n\t\t\t\tconsole.log('上传失败')\n\t\t\t})\n\t\t})\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/services/upload.service.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\nimport { CheckboxService } from 'app/services/checkbox.service';\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"service()\">查看 CheckboxService 服务</button>\n        </div>\n        \n        <dl class=\"mvvm-list samebox mt10\">\n        \t<dt>以数据  id 排序多选 </dt>\n        </dl>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <h3>获取的是 data 数据上的指定数据 值,而不是绑定到  checkbox 上的  value 值, 默认取 id 值</h3>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n\t\t<ul class=\"res-tr-tl clearfox _lh32 samebox mt10\">\n\t\t\t<li>\n\t\t\t\t<h6 class=\"col-sm-20\">全选：</h6>\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<input type=\"checkbox\" name=\"x\" [(ngModel)]=\"model.all\" (ngModelChange)=\"changeAll($event)\">\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t<li [attr.title]=\"'this is a name'\">\n\t\t\t\t<h6 class=\"col-sm-20\">多选框2：</h6>\n\t\t\t\t<div class=\"col-sm-80\">\n\t\t\t\t\t<label *ngFor=\"let item of data;index as index\" >\n\t\t\t\t\t\t{{item.value}} : \n\t\t\t\t\t\t<input type=\"checkbox\" value=\"angular\" \n\t\t\t\t\t\t\t\t[(ngModel)]=\"model.checkboxs[item.id]\"\n\t\t\t\t\t\t\t\t(ngModelChange)=\"change($event)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<h6 class=\"col-sm-20\">全选：</h6>\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<input type=\"checkbox\" name=\"y\" [(ngModel)]=\"model.all\" (ngModelChange)=\"changeAll($event)\">\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</ul>\n\t\t<hr class=\"_mt10_mb10x\">\n        <div class=\"mvvm-pre mt10\">返回原始结果: <s>{{ model | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <h2>返回全部处理结果:</h2>\n        <div class=\"mvvm-pre mt10\"><s>{{ result | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n         \n        <div class=\"mvvm-pre mt10\">获取所有的 value:<s>{{ valueObj | json }}</s></div>\n        <div class=\"mvvm-pre mt10\">获取所有的 value:<s>{{ valueArr | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n         \n        <div class=\"mvvm-pre mt10\">获取所有的 price:<s>{{ price | json }}</s></div>\n    `,\n    styles:[`\n    \tlabel{float:left;margin:2px 10px 0 0}\n    `]\n})\n\nexport class CheckboxAllIdComponent{\n\tresult:any = {};\n\tvalueObj:any = {};\n\tvalueArr = []\n\tprice:any = [];\n\t\n\tdata : Array<any> = [\n\t\t{ id:100, value: 'angular', price:600,  checked:true},\t//  checked 表示默认选中\n\t\t{ id:200, value: 'react', price:500},\t\n\t\t{ id:300, value: 'vue', price:800}\n\t]\n\tmodel:any = {\n\t\tall : false,\n\t\tcheckboxs : {}\n\t}\n\t\n\t// 动态获取配置\n\tcheckboxConfig(){\t \n\t\treturn {\n\t\t\tdata: this.data,\t\t\t\t// 循环的数据值\n\t\t\tmodel: this.model.checkboxs,\t// checkbox 的 ngModel 值\n\t\t\tall : this.model.all,\t\t\t// 取全选框的 ngModel 值\n\t\t\talldef : false,\t\t\t\t\t// 全选框默认值, 只在 data 没有 checked 的情况下起作用\n\t\t\tsortByIndex: false,\t\t\t\t// 是,取索引值排序, 默认, 否,取 id 值排序\n\t\t\tid : 'price'\t\t\t\t\t// 要取的主要数据值\n\t\t}\n\t}\n\n  \tconstructor(private router: RouterService, private checkbox:CheckboxService){ \n  \t\t\n  \t}\n  \t\n  \tngOnInit(){\n  \t\tlet result = this.checkbox.setDefaultChecked(this.checkboxConfig());\t// 默认配置\n  \t\tthis.model.all = result.all;\n  \t\tthis.result = result.result;\n  \t\tthis.getDetail(this.result.data);\n  \t}\n  \t\n  \t// 全选\n  \tchangeAll(val){\n  \t\tthis.result = this.checkbox.checkedAll(this.checkboxConfig());\n  \t\tthis.getDetail(this.result.data);\n  \t}\n  \t// 单选\n  \tchange(val:any){\n\t\tlet result = this.checkbox.checkedOneByOne(this.checkboxConfig());\n\t\tthis.result = result.result;\n\t\tthis.model.all = result.all;\n\t\tthis.getDetail(this.result.data);\n\t}\n  \t// 处理数据\n  \tgetDetail(data){\n  \t\tlet price = [];\n  \t\tlet valueObj = {};\n  \t\tlet valueArr = [];\n  \t\tdata.forEach((v,i)=>{\n  \t\t\tprice.push(v.price);\n  \t\t\t\n  \t\t\tvalueObj[v.id] = v.value;\t// 返回  {id:value,id:value, ...} 形式\n  \t\t\t\n  \t\t\tvalueArr.push({ id : v.id, value: v.value });\t// 返回数组对象 [{},{}]\n  \t\t})\n  \t\t\n  \t\tthis.price = price;\n  \t\tthis.valueObj = valueObj;\n  \t\tthis.valueArr = valueArr;\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/checkbox-all-id.component.ts';\n\t}\n\tservice(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'services/checkbox.service.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/checkbox-all-id.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\nimport { CheckboxService } from 'app/services/checkbox.service';\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"service()\">查看 CheckboxService 服务</button>\n        </div>\n        <div class=\"lh30 mvvm-code mt10\">\n\t\t\t<dl class=\"mvvm-list samebox\">\n\t        \t<dt>checkbox 多选框: </dt>\n\t        \t<dd>[(ngModel)] 只能返回  Boolean 值</dd>\n\t        \t<dd><b>#id</b> id.value ===  checkbox 中具体 value</dd>\n\t        \t<dd><b>#id=\"ngModel\"</b> id.value ===  Boolean 值</dd>\n\t        \t<dd>在 多选框 checkbox  中,<b>id.value</b> 可以取 ngModel 导入出的值,如果只有 #id, 则  id == 表单元素的 value</dd>\n\t        </dl>\n\t      \n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>以数据索引排序多选 </dt>\n\t        </dl>\n        </div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <h3>获取的是 data 数据上的指定数据 值,而不是绑定到  checkbox 上的  value 值, 默认取 id 值</h3>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n\t\t<ul class=\"res-tr-tl clearfox _lh32 samebox mt10\">\n\t\t\t<li>\n\t\t\t\t<h6 class=\"col-sm-20\">全选：</h6>\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<input type=\"checkbox\" name=\"x\" [(ngModel)]=\"model.all\" (ngModelChange)=\"changeAll($event)\">\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t<li [attr.title]=\"'this is a name'\">\n\t\t\t\t<h6 class=\"col-sm-20\">多选框2：</h6>\n\t\t\t\t<div class=\"col-sm-80\">\n\t\t\t\t\t<label *ngFor=\"let item of data;index as index\" >\n\t\t\t\t\t\t{{item.value}} : \n\t\t\t\t\t\t<input type=\"checkbox\" value=\"angular\" \n\t\t\t\t\t\t\t\t[(ngModel)]=\"model.checkboxs[index]\"\n\t\t\t\t\t\t\t\t(ngModelChange)=\"change($event)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<h6 class=\"col-sm-20\">全选：</h6>\n\t\t\t\t<div class=\"col-sm-10\">\n\t\t\t\t\t<input type=\"checkbox\" name=\"y\" [(ngModel)]=\"model.all\" (ngModelChange)=\"changeAll($event)\">\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</ul>\n\t\t<hr class=\"_mt10_mb10x\">\n        <div class=\"mvvm-pre mt10\">返回原始结果: <s>{{ model | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <h2>返回全部处理结果:</h2>\n        <div class=\"mvvm-pre mt10\"><s>{{ result | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n         \n        <div class=\"mvvm-pre mt10\">获取所有的 value:<s>{{ valueObj | json }}</s></div>\n        <div class=\"mvvm-pre mt10\">获取所有的 value:<s>{{ valueArr | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n         \n        <div class=\"mvvm-pre mt10\">获取所有的 price:<s>{{ price | json }}</s></div>\n    `,\n    styles:[`\n    \tlabel{float:left;margin:2px 10px 0 0}\n    `]\n})\n\nexport class CheckboxAllComponent{\n\tresult:any = {};\n\tvalueObj:any = {};\n\tvalueArr = []\n\tprice:any = [];\n\t\n\tdata : Array<any> = [\n\t\t{ id:100, value: 'angular', price:600 },\t// 此处必有 checked 参数\n\t\t{ id:200, value: 'react', price:500},\t\n\t\t{ id:300, value: 'vue', price:800}\n\t]\n\tmodel:any = {\n\t\tall : false,\n\t\tcheckboxs : {}\n\t}\n\t\n\t// 动态获取配置\n\tcheckboxConfig(){\t \n\t\treturn {\n\t\t\tdata: this.data,\t\t\t\t// 循环的数据值\n\t\t\tmodel: this.model.checkboxs,\t// checkbox 的 ngModel 值\n\t\t\tall : this.model.all,\t\t\t// 取全选框的 ngModel 值\n\t\t\talldef : false,\t\t\t\t\t// 全选框默认值, 只在 data 没有 checked 的情况下起作用\n\t\t\tsortByIndex: true,\t\t\t\t// 是,取索引值排序, 默认, 否,取 id 值排序\n\t\t\tid : 'value'\t\t\t\t\t// 要取的主要数据值\n\t\t}\n\t}\n\n  \tconstructor(private router: RouterService, private checkbox:CheckboxService){ \n  \t\t\n  \t}\n  \t\n  \tngOnInit(){\n  \t\tlet result = this.checkbox.setDefaultChecked(this.checkboxConfig());\t// 默认配置\n  \t\tthis.model.all = result.all;\n  \t\tthis.result = result.result;\n  \t\tthis.getDetail(this.result.data);\n  \t}\n  \t\n  \t// 全选\n  \tchangeAll(val){\n  \t\tthis.result = this.checkbox.checkedAll(this.checkboxConfig());\n  \t\tthis.getDetail(this.result.data);\n  \t}\n  \t// 单选\n  \tchange(val:any){\n\t\tlet result = this.checkbox.checkedOneByOne(this.checkboxConfig());\n\t\tthis.result = result.result;\n\t\tthis.model.all = result.all;\n\t\tthis.getDetail(this.result.data);\n\t}\n  \t// 处理数据\n  \tgetDetail(data){\n  \t\tlet price = [];\n  \t\tlet valueObj = {};\n  \t\tlet valueArr = [];\n  \t\tdata.forEach((v,i)=>{\n  \t\t\tprice.push(v.price);\n  \t\t\t\n  \t\t\tvalueObj[v.id] = v.value;\t// 返回  {id:value,id:value, ...} 形式\n  \t\t\t\n  \t\t\tvalueArr.push({ id : v.id, value: v.value });\t// 返回数组对象 [{},{}]\n  \t\t})\n  \t\t\n  \t\tthis.price = price;\n  \t\tthis.valueObj = valueObj;\n  \t\tthis.valueArr = valueArr;\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/checkbox-all.component.ts';\n\t}\n\tservice(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'services/checkbox.service.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/checkbox-all.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\nimport { CheckboxService } from 'app/services/checkbox.service';\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        \t<button class=\"btn-default\" (click) = \"service()\">查看 CheckboxService 服务</button>\n        </div>\n    \t\n        <div class=\"lh30 mvvm-code samebox mt10\">\n\t\t\t<dl class=\"mvvm-list\">\n\t        \t<dt>checkbox 多选框: </dt>\n\t        \t<dd>[(ngModel)] 只能返回  Boolean 值</dd>\n\t        \t<dd><b>#id</b> id.value ===  checkbox 中具体 value</dd>\n\t        \t<dd><b>#id=\"ngModel\"</b> id.value ===  Boolean 值</dd>\n\t        \t<dd>在 多选框 checkbox  中,<b>id.value</b> 可以取 ngModel 导入出的值,如果只有 #id, 则  id == 表单元素的 value</dd>\n\t        </dl>\n        </div>\n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre mt10\">双向绑定数据 form:<s>{{ model | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre mt10\">获取 checkbox 数据: <s>{{checkboxs | json}}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre mt10\">提交表单后的 ngForm 数据: <s>{{data | json}}</s></div>\n        \n        \n        <form (ngSubmit)=\"onSubmit(f.value,f.valid)\" #f=\"ngForm\" class=\"samebox mt10\">\n\t\t\t<ul class=\"res-tr-tl clearfox _lh32\">\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">多选框：</h6>\n\t\t\t\t\t<div class=\"col-sm-80\">\n\t\t\t\t\t\t<p class=\"_fl_mt10\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"a\" [(ngModel)]=\"model.checkbox.a\" value=\"angular\" (change)=\"change($event)\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"b\" [(ngModel)]=\"model.checkbox.b\" value=\"react\"  (change)=\"change($event)\" class=\"mlr10\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"c\" [(ngModel)]=\"model.checkbox.c\" value=\"vue\"  (change)=\"change($event)\">\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt20 res-btn\">\n\t\t\t\t\t<h6 class=\"col-sm-20\"></h6>\n\t\t\t\t\t<div class=\"col-sm-20\"><button class=\"btn-default\">确认</button></div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</form>\n\t\t\n    `,\n})\n\nexport class CheckboxComponent{\n\tdata:string;\n\tmodel:any = {\n\t\tcheckbox : {}\n\t}\n\tcheckboxs:any[] = [];\n\n  \tconstructor(private router: RouterService, private checkbox:CheckboxService){ }\n  \t\n  \tngOnInit(){\n  \t\t\n  \t}\n  \t\n  \tchange(event){\n  \t\tthis.checkboxs = this.checkbox.getCheckedValue(event,this.checkboxs);\n  \t}\n  \t\n  \tonSubmit(formData,valid){\n  \t\tif(valid){\t// 表单通过验证\n  \t\t\t\n  \t\t\tformData.checkbox = this.checkboxs;\n  \t\t\t\n  \t\t\tthis.data = formData;\n  \t\t}\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/checkbox.component.ts';\n\t}\n\tservice(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'services/checkbox.service.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/checkbox.component.ts","// ===================================================== \nimport { Component, ViewChild } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\nimport { HttpService } from 'app/services/http.service';\nimport { UploadService } from 'app/services/upload.service';\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n\t\t\t<button class=\"btn-default\" (click) = \"service()\">查看上传服务</button>\n        </div>\n    \t\n        <div class=\"lh30 mvvm-code samebox mt10\">\n\t\t\t<dl class=\"mvvm-list\">\n\t        \t<dt>文件上传服务: </dt>\n\t        </dl>\n        </div>\n        <hr class=\"_mt10_mb10x\">\n        <div>\n\t\t\t<button class=\"btn-default\" (click)=\"fileReaderUpload()\" >FileReader 上传</button>\n\t\t\t<button class=\"btn-default\" (click)=\"formDataUpload()\" >FormData 上传</button>\n\t\t\t<button class=\"btn-default\" (click)=\"fileAllCancel();\">全部取消</button>\n\t\t\t<button class=\"btn-default\" (click)=\"fileAllDelete()\" >清除列表</button>\n\t\t\t<button class=\"btn-default\" (click)=\"http.token()\" >登录</button>\n\t\t\t<span class=\"_ml20_f16 c1\">{{errmsg}}</span>\n        </div>\n        <hr class=\"_mt10_mb10x\">\n\t\t<div class=\"upload-file-btn rel\">\n\t\t\t<a class=\"btn-default\"><i class=\"font-cloud-upload\"></i>ng上传文件\n\t\t\t\t<input type=\"file\"\n\t\t\t\t\t#fileUpload\n\t\t\t\t\t(change)=\"selectedFileOnChanged($event)\"\n\t\t\t\t\tmultiple\n\t\t\t\t>\n\t\t\t</a>\n\t\t</div>\n\t\t\n\t\t<hr class=\"_mt10_mb10x\">\n\t\t \n\t\t<div class=\"mvvm-code\">\n\t\t\t<p>选择文件个数: <i>{{fileLength}}</i></p>\n\t\t\t\n\t\t\t<dl>\n\t\t\t\t<li *ngFor=\"let v of uploads.list;index as index\" (click)=\"del(index)\" \n\t\t\t\t\t[ngClass]=\"{c1:v?.size>maxSize || filters?.noType?.length > 0}\"\n\t\t\t\t\t\n\t\t\t\t>\n\t\t\t\t\t<span class=\"mr10\">名字: <i>{{v?.name}}</i></span>\n\t\t\t\t\t<span class=\"mr10\">大小: <i>{{v?.size}} kb</i></span>\n\t\t\t\t\t<span class=\"mr10\">类型: <i>{{v?.type}}</i></span>\n\t\t\t\t\t<span class=\"mr10\">最后修改时间: <i>{{v?.lastModified |  date : 'yyyy-MM-dd hh:mm:ss'}}</i></span>\n\t\t\t\t</li>\n\t\t\t</dl>\n\t\t</div>\n\t\t<hr class=\"_mt10_mb10x\">\n\t\t\n\t\t<img *ngFor=\"let v of uploadImg;index as i\" [src]=\"v\" (click)=\"delImg(i)\">\n\t\t<a [href]=\"v\" *ngFor=\"let v of uploadImg;index as i\"  (click)=\"delImg(i)\">文件</a>\n    `,\n    styles:[`\n    \tc1,.c1 i{color:red}\n    `]\n})\n\nexport class FileUploadComponent{\n\tconstructor(private router: RouterService, public uploader:UploadService, public http:HttpService){ }\n\t\n\t@ViewChild('fileUpload') fileUpload;\n\t\n\tmaxSize:number = 1024*1024;\n\tfileLength:number = 0;\n\t\n\timg:string='';\n\terrmsg:string;\n\tuploadImg:any = []\n\t\n\t// 选择文件\n\tuploads:any = {};\n\t// 删除上传之前的队列\n\tdel(index){\n\t\tthis.uploads.list.splice(index,1);\n\t\tconsole.log(this.uploads.list.length)\n\t\tif(this.uploads.list.length == 0){\n\t\t\tthis.fileAllCancel();\n\t\t}\n\t}\n\t// 删除上传数据\n\tdelImg(index){\n\t\tthis.uploadImg.splice(index,1);\n\t\tif(this.uploadImg.length == 0){\n\t\t\tthis.fileAllCancel();\n\t\t}\n\t}\n\t// 清空上传数据\n\tfileAllDelete(){\n\t\tthis.uploadImg = [];\n\t\tthis.fileAllCancel();\n\t}\n\t\n\t// 全部取消,重置 input file 框\n\tfileAllCancel(){\n\t\tthis.fileUpload.nativeElement.value = '';\t// 清空 input file\n\t\tthis.uploads.list = []\n\t\tthis.fileLength = 0;\n\t}\n\t// 选择文件\n\tselectedFileOnChanged(event){\n\t\tthis.uploads = this.uploader.getUploadFileInfo(event);\n\t\tthis.fileLength = this.uploads.list.length;\n\t}\n\t// FileReader 上传\n\tfileReaderUpload(){\n\t\tif(this.fileLength == 0){\n\t\t\tthis.errmsg = '请先选择你要上传的文件';\n\t\t\treturn;\n\t\t}\n\t\tthis.errmsg = '正在上传中,请稍候......';\n\t\tthis.uploader.fileReaderUploader(this.uploads,{\n\t\t\timgApi: 'upload/streamUpload.do',\n\t\t\tfileApi: 'upload/fileUpload.do',\n\t\t\tmaxSize : this.maxSize\n\t\t}).then((result:any) => {\n\t\t\tif(result.data){\n\t\t\t\tthis.uploadImg.push(result.data)\n\t\t\t\tthis.errmsg = '上传成功';\n\t\t\t}\n\t\t\t// 错误处理\n\t\t\tif(result.err){\n\t\t\t\tthis.errmsg = result.err.msg;\n\t\t\t}\n\t\t})\n\t}\n\t// FormData 上传\n\tformDataUpload(){\n\t\tif(this.fileLength == 0){\n\t\t\tthis.errmsg = '请先选择你要上传的文件';\n\t\t\treturn;\n\t\t}\n\t\tthis.errmsg = '正在上传中,请稍候......';\n\t\tthis.uploader.formDataUploader(this.uploads,{\n\t\t\turl: 'upload/streamUpload.do',\n\t\t\tmaxSize : this.maxSize\n\t\t}).then((result:any) => {\n\t\t\tif(result.data){\n\t\t\t\tthis.uploadImg.push(result.data)\n\t\t\t\tthis.errmsg = '上传成功';\n\t\t\t}\n\t\t\t// 错误处理\n\t\t\tif(result.err){\n\t\t\t\tthis.errmsg = result.err.msg;\n\t\t\t}\n\t\t},(data)=>{\n\t\t\tthis.errmsg = '上传失败';\n\t\t})\n\t}\n\t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/checkbox.component.ts';\n\t}\n  \tservice(){\n  \t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'services/upload.service.ts';\n  \t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/file-upload.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== \n@Component({\n    template: `\n\t\t<div class=\"samebox\">\n\t\t\t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n\t\t</div>\n    \t\n        <div class=\"lh30 mvvm-code samebox mt10\">\n\t\t\t<dl class=\"mvvm-list\">\n\t        \t<dt>表单提交: </dt>\n\t        \t<dd>在 form 元素中[(ngModel)] 所在的表单元素必须添加 <b>name=\"\"</b></dd>\n\t        \t<dd><b>#name=\"ngModel\"</b> 把NgModel导出成了一个名叫name的局部变量</dd>\n\t        \t<dd><b>f.valid</b> 控件有效</dd>\n\t        \t<dd><b>f.pristine</b> 控件全新,即处于默认状态</dd>\n\t        </dl>\n        </div>\n        \n        <hr class=\"_mt10_mb10x\">\n       \n        <div class=\"mvvm-pre mt10\">双向绑定数据 form: <s>{{ model | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre mt10\">提交表单后的 ngForm 数据: <s>{{ data | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <form (ngSubmit)=\"onSubmit(f.value,f.valid)\" #f=\"ngForm\" class=\"samebox mt10\">\n\t\t\t<ul class=\"res-tr-tl clearfox _lh32\">\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">单行文本框：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\"><input type=\"text\" [(ngModel)]=\"model.name\" name=\"username\" class=\"_w200\" placeholder=\"请输入文字\"></div>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">多选框：</h6>\n\t\t\t\t\t<div class=\"col-sm-80\">\n\t\t\t\t\t\t<label class=\"checkbox\" [ngClass]=\"{active:model.isYou}\"><span><input type=\"checkbox\" name=\"a\" [(ngModel)]=\"model.isYou\"></span></label>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">下拉框：</h6>\n\t\t\t\t\t<div class=\"col-sm-80\">\n\t\t\t\t\t\t<select [(ngModel)]=\"model.code\" name=\"code\">\n\t\t\t\t\t\t\t<option>angular</option>\n\t\t\t\t\t\t\t<option>react</option>\n\t\t\t\t\t\t\t<option>vue</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">单选框：</h6>\n\t\t\t\t\t<div class=\"col-sm-80\">\n\t\t\t\t\t\t<label class=\"radio mr10\" [ngClass]=\"{active:model.sex=='man'}\"><span><input type=\"radio\" name=\"sex\" [(ngModel)]=\"model.sex\"  value=\"man\"></span></label>\n\t\t\t\t\t\t<label class=\"radio\" [ngClass]=\"{active:model.sex=='woman'}\"><span><input type=\"radio\" name=\"sex\" [(ngModel)]=\"model.sex\"  value=\"woman\"></span></label>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">换行文本框：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\"><textarea class=\"_w200\" [(ngModel)]=\"model.txt\" name=\"txt\" placeholder=\"请输入文字\"></textarea></div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt20 res-btn\">\n\t\t\t\t\t<h6 class=\"col-sm-20\"></h6>\n\t\t\t\t\t<div class=\"col-sm-80\"><button class=\"btn-default\">确认</button></div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</form>\n    `\n})\n\nexport class FormComponent{\n\tdata:string;\n\tmodel:any = {\n\t\tcode: 'react' // 设置默认值\n\t}\n\n  \tconstructor(private router: RouterService){ }\n  \t\n  \tonSubmit(formData,valid){\n  \t\t// 控件是有效\n  \t\tif(valid){\t\n  \t\t\tthis.data = formData;\n  \t\t}\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/form.component.ts';\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/form.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule }   from '@angular/common';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\n// ===================================================== 服务\nimport { UploadService } from 'app/services/upload.service';\n// ===================================================== 同一个模块的组件\nimport { FormComponent } from './form.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxAllComponent } from './checkbox-all.component';\nimport { CheckboxAllIdComponent } from './checkbox-all-id.component';\nimport { TemplateVarComponent } from './template-var.component';\nimport { ValidateInnerComponent } from './validate-inner.component';\nimport { ValidateFormGroupComponent } from './validate-form-group.component';\nimport { ValidateFormBuilderComponent } from './validate-form-builder.component';\nimport { FileUploadComponent } from './file-upload.component';\n// ======================================================================== NgModule\n@NgModule({\n\timports: [ \n\t\tCommonModule,\t\t\t// 指令模块\n\t\tFormsModule,\t\t\t// 表单模块\n\t\tReactiveFormsModule,\t// 函数式函数模块\n\t\tRouterModule.forChild(\t// 子路由不能使用根路由的 router-outlet\n\t\t\t[\n\t\t\t\t{ path: 'form', component: FormComponent, data:{ title: '表单提交'} },\n\t\t\t\t{ path: 'checkbox', component: CheckboxComponent, data:{ title: '多选框取value值'}  },\n\t\t\t\t{ path: 'checkbox-all', component: CheckboxAllComponent, data:{ title:'多选框以数据索引排序多选'} },\n\t\t\t\t{ path: 'checkbox-all-id', component: CheckboxAllIdComponent, data:{ title:'多选框以数据索引排序多选'} },\n\t\t\t\t{ path: 'template-var', component: TemplateVarComponent, data:{ title:'模板引用变量'} },\n\t\t\t\t{ path: 'validate-inner', component: ValidateInnerComponent, data:{ title:'内置模板验证'} },\n\t\t\t\t{ path: 'validate-form-group', component: ValidateFormGroupComponent, data:{ title:'FormGroup函数验证'} },\n\t\t\t\t{ path: 'validate-form-builder', component: ValidateFormBuilderComponent, data:{ title:'FormBuilder函数验证'} },\n\t\t\t\t{ path: 'file-upload', component: FileUploadComponent, data:{ title:'文件上传'} },\n\t\t\t]\n\t\t)\n\t],\n\tdeclarations: [\n\t\tFormComponent,\n\t\tCheckboxComponent,\n\t\tCheckboxAllComponent,\n\t\tCheckboxAllIdComponent,\n\t\tTemplateVarComponent,\n\t\tValidateInnerComponent,\n\t\tValidateFormGroupComponent,\n\t\tValidateFormBuilderComponent,\n\t\tFileUploadComponent\n\t],\n\tproviders:[UploadService],\n\texports: [ RouterModule ]\n})\nexport class FormModule { }\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/form.module.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== \n@Component({\n    template: `\n       <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        </div>\n        \n        <div class=\"lh30 mvvm-code mt10\">\n\t\t\t<dl class=\"mvvm-list samebox\">\n\t        \t<dt>模板引用变量( 仅用于表单元素 , 且只能在模板中即用): </dt>\n\t        \t<dd><b>#</b>id</dd>\n\t        \t<dd><b>#id=\"ngModel\"</b> 仅用于 form 包含的表单中</dd>\n\t        \t<dd><b>ref-</b>id</dd>\n\t        </dl>\n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>$event 对象取得用户输入( 靠不住的做法 ): </dt>\n\t        \t<dd><b>event.target.value</b>id</dd>\n\t        </dl>\n        </div>\n\t\t\n\t\t<div class=\"samebox mt10\">\n\t\t\t<p class=\"mt10\">#id: <input #obj (keyup)=\"change1(obj)\"> {{str}}</p>\n        \t<p class=\"mt10\">#ref-fx: <input ref-fx (keyup)=\"change2(fx.value)\"> {{some}}</p>\n        \t<p class=\"mt10\">$event: <input (keyup)=\"change3($event)\"> {{msg}}</p>\n\t\t</div>\n\n    `\n})\n\nexport class TemplateVarComponent{\n\tstr;\n\tsome;\n\tmsg;\n\t\n  \tconstructor(private router: RouterService){\n\t\t\n\t}\n  \t\n  \tchange1(obj){\n  \t\tlet _this = this;\n  \t\tsetTimeout(()=>{\n  \t\t\t_this.str = obj.value\n  \t\t},200)\n  \t}\n  \t\n  \tchange2(val){\n  \t\tlet _this = this;\n  \t\tsetTimeout(()=>{\n  \t\t\t_this.some = val\n  \t\t},200)\n  \t}\n  \tchange3(event){\n  \t\tlet _this = this;\n  \t\tsetTimeout(()=>{\n  \t\t\t_this.msg = event.target.value;\n  \t\t},200)\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/template-var.component.ts';\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/template-var.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n//import { forbiddenNameValidator } from './directive/forbidden.directive';\n// ===================================================== 接口\nexport interface myForm {\n\tusername: string; // 必填，5-8个字符\n\temail: string; // 必填，有效的email格式\n\tpassword: string; // 必填，值要与confirmPassword值一样\n\tconfirmPassword: string; // 必填，值要与password值一样\n}\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        </div>\n    \t\n        <div class=\"lh30 mvvm-code mt10\">\n        \t<dl class=\"mvvm-list samebox\">\n\t        \t<dt>FormBuilder 函数验证: </dt>\n\t        \t<dd><b>formControlName</b>=\"emails\"</dd>\n\t        </dl>\n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>FormGroup 判断验证是否正确: </dt>\n\t        \t<dd>非空验证: <b>myForm.controls.emails.errors?.required</b>: <s>{{ myForm.controls.emails.errors?.required }}</s></dd>\n\t        \t<dd>最小长度验证: <b>myForm.controls.emails.errors?.minLength</b>: <s>{{ myForm.controls.emails.errors?.minLength }}</s></dd>\n\t        \t<dd>最大长度验证: <b>myForm.controls.emails.errors?.maxLength</b>: <s>{{ myForm.controls.emails.errors?.maxLength }}</s></dd>\n\t        \t<dd>邮箱验证: <b>myForm.controls.emails.errors?.email</b>: <s>{{ myForm.controls.emails.errors?.email }}</s></dd>\n\t        \t<dd>正则验证: <b>myForm.controls.emails.errors?.pattern</b>: <s>{{ myForm.controls.emails.errors?.pattern }}</s></dd>\n\t        </dl>\n\t        \n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>FormGroup 判断验证是否正确: </dt>\n\t        \t<dd>非空验证: <b>myForm.get('emails').errors?.required</b>: <s>{{ myForm.get('emails').errors?.required }}</s></dd>\n\t        \t<dd>最小长度验证: <b>myForm.get('emails').errors?.minLength</b>: <s>{{ myForm.get('emails').errors?.minLength }}</s></dd>\n\t        \t<dd>最大长度验证: <b>myForm.get('emails').errors?.maxLength</b>: <s>{{ myForm.get('emails').errors?.maxLength }}</s></dd>\n\t        \t<dd>邮箱验证: <b>myForm.get('emails').errors?.email</b>: <s>{{ myForm.get('emails').errors?.email }}</s></dd>\n\t        \t<dd>正则验证: <b>myForm.get('emails').errors?.pattern</b>: <s>{{ myForm.get('emails').errors?.pattern }}</s></dd>\n\t        </dl>\n\t        \n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>FormGroup css 判断验证: </dt>\n\t        \t<dd>验证不通过 : <b>myForm.get('emails').invalid</b>: <s>{{ myForm.get('emails').invalid }}</s></dd>\n\t        \t<dd>验证通过: <b>myForm.get('emails').valid</b>: <s>{{ myForm.get('emails').valid }}</s></dd>\n\t        \t<dd>表单全新未操作: <b>myForm.get('emails').pristine</b>: <s>{{ myForm.get('emails').pristine }}</s></dd>\n\t        \t<dd>表单已操作: <b>myForm.get('emails').dirty</b>: <s>{{ myForm.get('emails').dirty }}</s></dd>\n\t        \t<dd>表单未操作: <b>myForm.get('emails').untouched</b>: <s>{{ myForm.get('emails').untouched }}</s></dd>\n\t        \t<dd>表单已操作: <b>myForm.get('emails').touched</b>: <s>{{ myForm.get('emails').touched }}</s></dd>\n\t        \t<dd>表单xx:<b>myForm.get('emails').pending</b>: <s>{{ myForm.get('emails').pending }}</s></dd>\n\t        </dl>\n\t        \n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>FormGroup css 判断验证: </dt>\n\t        \t<dd>验证不通过 : <b>myForm.controls.emails.invalid</b>: <s>{{ myForm.controls.emails.invalid }}</s></dd>\n\t        \t<dd>验证通过: <b>myForm.controls.emails.valid</b>: <s>{{ myForm.controls.emails.valid }}</s></dd>\n\t        \t<dd>表单全新未操作: <b>myForm.controls.emails.pristine</b>: <s>{{ myForm.controls.emails.pristine }}</s></dd>\n\t        \t<dd>表单已操作: <b>myForm.controls.emails.dirty</b>: <s>{{ myForm.controls.emails.dirty }}</s></dd>\n\t        \t<dd>表单未操作: <b>myForm.controls.emails.untouched</b>: <s>{{ myForm.controls.emails.untouched }}</s></dd>\n\t        \t<dd>表单已操作: <b>myForm.controls.emails.touched</b>: <s>{{ myForm.controls.emails.touched }}</s></dd>\n\t        \t<dd>表单xx:<b>myForm.controls.emails.pending</b>: <s>{{ myForm.controls.emails.pending }}</s></dd>\n\t        </dl>\n        </div>\n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre\">双向绑定数据 form: <s>{{ model | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre\">提交表单后的 ngForm 数据: <s>{{ data | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n \t\t<div class=\"mvvm-pre\">myForm.value.username: <s>{{ myForm.value.username }}</s></div>\n \t\t<hr class=\"_mt10_mb10x\">\n \t\t <div class=\"mvvm-pre\">myForm.get('username').errors : <s>{{ myForm.get('username').errors | json }}</s></div>\n \t\t<hr class=\"_mt10_mb10x\">\n \t\t\n\t\t<form (ngSubmit)=\"onSubmit(f.value,f.valid)\" novalidate #f=\"ngForm\" [formGroup]=\"myForm\" class=\"samebox mt10\">\n\t\t\t<ul class=\"res-tr-tl clearfox _lh32\" [hidden]=\"f.submitted\">\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">非空：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<input type=\"text\" class=\"_w200 mr10\" formControlName=\"username\">\n\t\t\t\t\t\t<span *ngIf=\"myForm.controls.username.pristine\" class=\"mr20\">未修改</span>\n\t\t\t\t\t\t<span *ngIf=\"myForm.controls.username.dirty\" class=\"mr20\">已修改</span>\n\t\t\t\t\t\t<span *ngIf=\"myForm.controls.username.valid\">有效</span>\n\t\t\t\t\t\t<span [hidden]=\"myForm.controls.username.valid || myForm.controls.username.pristine\" style=\"color:red\">\n\t\t\t\t\t\t\t<b *ngIf=\"myForm.controls.username.errors?.minlength || myForm.controls.username.errors?.maxlength\">长度必须为4-8</b>\n\t\t\t\t\t\t\t<b *ngIf=\"myForm.controls.username.errors?.required\">非空</b>\n\t\t\t\t\t\t\t<b *ngIf=\"myForm.controls.username.errors?.pattern\">只能是数字,长度为 5</b>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt10\">\n\t\t\t\t\t<h6 class=\"col-sm-20\">邮箱验证：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<input type=\"text\" class=\"_w200 mr10\" formControlName=\"emails\">\n\t\t\t\t\t\t<span [hidden]=\"myForm.controls.emails.valid || myForm.controls.emails.pristine\" style=\"color:red\">\n\t\t\t\t\t\t\t<b *ngIf=\"myForm.controls.emails.errors?.email\">必须是邮箱</b>\n\t\t\t\t\t\t\t<span *ngIf=\"myForm.get('emails').invalid\">必须是邮箱2</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt10\">\n\t\t\t\t\t<h6 class=\"col-sm-20\">组合验证：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<fieldset formGroupName=\"address\">\n\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"city\">\n\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"street\">\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt20 res-btn\">\n\t\t\t\t\t<h6 class=\"col-sm-20\"></h6>\n\t\t\t\t\t<div class=\"col-sm-80\">\n\t\t\t\t\t\t<button class=\"btn-default\" [disabled]=\"myForm.invalid\">确认</button>\n\t\t\t\t\t\t<button class=\"btn-default mtb10\" type=\"button\" (click)=\"f.resetForm({})\">f.resetForm(｛｝) 重置</button>\n\t\t\t\t\t\t<button class=\"btn-default\" type=\"button\" (click)=\"reset()\">reset() 重置</button>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</form>\n    `,\n    styles:[`\n    \tform .ng-valid{color:green;}\t\t\t/* 验证通过 */\n    \tform .ng-invalid{color:red}\t\t\t\t/* 验证不通过 */\n    \tform .ng-pending{font-weight:bold;}\n    \tform .ng-pristine{color:blue;}\t\t\t/* 表单全新未操作 */\n    \tform .ng-dirty{background:#eee;}\t\t/* 表单已操作 */\n    \tform .ng-untouched{border-color:pink;}\t/* 表单未操作*/\n    \tform .ng-touched{border-color:purple}\t/* 表单已操作 */\n    `]\n})\n\nexport class ValidateFormBuilderComponent{\n\tdata:string;\n\tmyForm: FormGroup;\n\tmodel:any = {\n\t\t\n\t}\n\n  \tconstructor(private router: RouterService, private fb: FormBuilder){ }\n  \t\n  \tngOnInit(){\n  \t\tthis.myForm = this.fb.group({\n  \t\t\t'username': ['这里设置默认值', [\n\t\t\t\tValidators.required,\t\t\t// 非空验证\n\t\t\t\tValidators.minLength(4),\t\t// 最小长度\n\t\t\t\tValidators.maxLength(8),\t\t// 最大长度\n\t\t\t\tValidators.pattern('[0-9]{6}')\t// 正则验证\n      \t\t]],\n      \t\t'emails': ['填写邮箱', [\n      \t\t\tValidators.required,\n      \t\t\tValidators.email\t\t\t\t// 邮箱验证\n      \t\t]],\n      \t\t'address' : this.fb.group({\n\t\t\t\t  city : ['城市', [Validators.required,Validators.minLength(5)]],\n\t\t\t\tstreet : ['街道', Validators.required]\n\t\t\t})\n  \t\t})\n  \t\t\n  \t\tthis.model = this.myForm.value;\t// 获取所有表单数据\n  \t}\n  \t\n  \tonSubmit(formData,valid){\n  \t\tif(valid){\n  \t\t\tthis.data = formData;\n  \t\t}\n  \t}\n  \t\n  \t// 重置 form\n  \treset(){\n  \t\tthis.myForm.reset();\n  \t}\n  \t// 获取指定值\n  \tget userame(){\n  \t\treturn this.myForm.get('userame')\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/validate-form-builder.component.ts';\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/validate-form-builder.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n//import { forbiddenNameValidator } from './directive/forbidden.directive';\n// ===================================================== 接口\nexport interface myForm {\n\tusername: string; // 必填，5-8个字符\n\temail: string; // 必填，有效的email格式\n\tpassword: string; // 必填，值要与confirmPassword值一样\n\tconfirmPassword: string; // 必填，值要与password值一样\n}\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        </div>\n        \n        <div class=\"lh30 mvvm-code mt10\">\n        \t<dl class=\"mvvm-list samebox\">\n        \t\t<dt>FormGroup 函数验证: </dt>\n        \t\t<dd><b>formControlName</b>=\"emails\"</dd>\n        \t</dl>\n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>FormGroup 判断验证是否正确: </dt>\n\t        \t<dd>非空验证: <b>myForm.controls.emails.errors?.required</b>: <s>{{ myForm.controls.emails.errors?.required }}</s></dd>\n\t        \t<dd>最小长度验证: <b>myForm.controls.emails.errors?.minLength</b>: <s>{{ myForm.controls.emails.errors?.minLength }}</s></dd>\n\t        \t<dd>最大长度验证: <b>myForm.controls.emails.errors?.maxLength</b>: <s>{{ myForm.controls.emails.errors?.maxLength }}</s></dd>\n\t        \t<dd>邮箱验证: <b>myForm.controls.emails.errors?.email</b>: <s>{{ myForm.controls.emails.errors?.email }}</s></dd>\n\t        \t<dd>正则验证: <b>myForm.controls.emails.errors?.pattern</b>: <s>{{ myForm.controls.emails.errors?.pattern }}</s></dd>\n\t        </dl>\n\t        \n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>FormGroup 判断验证是否正确: </dt>\n\t        \t<dd>非空验证: <b>myForm.get('emails').errors?.required</b>: <s>{{ myForm.get('emails').errors?.required }}</s></dd>\n\t        \t<dd>最小长度验证: <b>myForm.get('emails').errors?.minLength</b>: <s>{{ myForm.get('emails').errors?.minLength }}</s></dd>\n\t        \t<dd>最大长度验证: <b>myForm.get('emails').errors?.maxLength</b>: <s>{{ myForm.get('emails').errors?.maxLength }}</s></dd>\n\t        \t<dd>邮箱验证: <b>myForm.get('emails').errors?.email</b>: <s>{{ myForm.get('emails').errors?.email }}</s></dd>\n\t        \t<dd>正则验证: <b>myForm.get('emails').errors?.pattern</b>: <s>{{ myForm.get('emails').errors?.pattern }}</s></dd>\n\t        </dl>\n\t        \n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>FormGroup css 判断验证: </dt>\n\t        \t<dd>验证不通过 : <b>myForm.get('emails').invalid</b>: <s>{{ myForm.get('emails').invalid }}</s></dd>\n\t        \t<dd>验证通过: <b>myForm.get('emails').valid</b>: <s>{{ myForm.get('emails').valid }}</s></dd>\n\t        \t<dd>表单全新未操作: <b>myForm.get('emails').pristine</b>: <s>{{ myForm.get('emails').pristine }}</s></dd>\n\t        \t<dd>表单已操作: <b>myForm.get('emails').dirty</b>: <s>{{ myForm.get('emails').dirty }}</s></dd>\n\t        \t<dd>表单未操作: <b>myForm.get('emails').untouched</b>: <s>{{ myForm.get('emails').untouched }}</s></dd>\n\t        \t<dd>表单已操作: <b>myForm.get('emails').touched</b>: <s>{{ myForm.get('emails').touched }}</s></dd>\n\t        \t<dd>表单xx:<b>myForm.get('emails').pending</b>: <s>{{ myForm.get('emails').pending }}</s></dd>\n\t        </dl>\n\t        \n\t        <dl class=\"mvvm-list samebox mt10\">\n\t        \t<dt>FormGroup css 判断验证: </dt>\n\t        \t<dd>验证不通过 : <b>myForm.controls.emails.invalid</b>: <s>{{ myForm.controls.emails.invalid }}</s></dd>\n\t        \t<dd>验证通过: <b>myForm.controls.emails.valid</b>: <s>{{ myForm.controls.emails.valid }}</s></dd>\n\t        \t<dd>表单全新未操作: <b>myForm.controls.emails.pristine</b>: <s>{{ myForm.controls.emails.pristine }}</s></dd>\n\t        \t<dd>表单已操作: <b>myForm.controls.emails.dirty</b>: <s>{{ myForm.controls.emails.dirty }}</s></dd>\n\t        \t<dd>表单未操作: <b>myForm.controls.emails.untouched</b>: <s>{{ myForm.controls.emails.untouched }}</s></dd>\n\t        \t<dd>表单已操作: <b>myForm.controls.emails.touched</b>: <s>{{ myForm.controls.emails.touched }}</s></dd>\n\t        \t<dd>表单xx:<b>myForm.controls.emails.pending</b>: <s>{{ myForm.controls.emails.pending }}</s></dd>\n\t        </dl>\n        </div>\n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre\">双向绑定数据 form: <s>{{ model | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre\">提交表单后的 ngForm 数据: <s>{{ data | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n \t\t<div class=\"mvvm-pre\">myForm.value.username: <s>{{ myForm.value.username }}</s></div>\n \t\t<hr class=\"_mt10_mb10x\">\n\t\t<div class=\"mvvm-pre\">myForm.get('username').errors : <s>{{ myForm.get('username').errors | json }}</s></div>\n \t\t<hr class=\"_mt10_mb10x\">\n \t\t\n \t\t<form (ngSubmit)=\"onSubmit(f.value,f.valid)\" novalidate #f=\"ngForm\" [formGroup]=\"myForm\" class=\"samebox mt10\">\n\t\t\t<ul class=\"res-tr-tl clearfox _lh32\" [hidden]=\"f.submitted\">\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">非空：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<input type=\"text\" class=\"_w200 mr10\" formControlName=\"username\">\n\t\t\t\t\t\t<span *ngIf=\"myForm.controls.username.pristine\" class=\"mr20\">未修改</span>\n\t\t\t\t\t\t<span *ngIf=\"myForm.controls.username.dirty\" class=\"mr20\">已修改</span>\n\t\t\t\t\t\t<span *ngIf=\"myForm.controls.username.valid\">有效</span>\n\t\t\t\t\t\t<span [hidden]=\"myForm.controls.username.valid || myForm.controls.username.pristine\" style=\"color:red\">\n\t\t\t\t\t\t\t<b *ngIf=\"myForm.controls.username.errors?.minlength || myForm.controls.username.errors?.maxlength\">长度必须为4-8</b>\n\t\t\t\t\t\t\t<b *ngIf=\"myForm.controls.username.errors?.required\">非空</b>\n\t\t\t\t\t\t\t<b *ngIf=\"myForm.controls.username.errors?.pattern\">只能是数字,长度为 5</b>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt10\">\n\t\t\t\t\t<h6 class=\"col-sm-20\">邮箱验证：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<input type=\"text\" class=\"_w200 mr10\" formControlName=\"emails\">\n\t\t\t\t\t\t<span [hidden]=\"myForm.controls.emails.valid || myForm.controls.emails.pristine\" style=\"color:red\">\n\t\t\t\t\t\t\t<b *ngIf=\"myForm.controls.emails.errors?.email\">必须是邮箱</b>\n\t\t\t\t\t\t\t<span *ngIf=\"myForm.get('emails').invalid\">必须是邮箱2</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt10\">\n\t\t\t\t\t<h6 class=\"col-sm-20\">邮箱验证：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<fieldset formGroupName=\"address\">\n\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"city\">\n\t\t\t\t\t\t\t<input type=\"text\" formControlName=\"street\">\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt20 res-btn\">\n\t\t\t\t\t<h6 class=\"col-sm-20\"></h6>\n\t\t\t\t\t<div class=\"col-sm-80\">\n\t\t\t\t\t\t<button class=\"btn-default\" [disabled]=\"myForm.invalid\">确认</button>\n\t\t\t\t\t\t<button class=\"btn-default mtb10\" type=\"button\" (click)=\"f.resetForm({})\">f.resetForm(｛｝) 重置</button>\n\t\t\t\t\t\t<button class=\"btn-default\" type=\"button\" (click)=\"reset()\">reset() 重置</button>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</form>\n    `,\n    styles:[`\n    \tform .ng-valid{color:green;}\t\t\t/* 验证通过 */\n    \tform .ng-invalid{color:red}\t\t\t\t/* 验证不通过 */\n    \tform .ng-pending{font-weight:bold;}\n    \tform .ng-pristine{color:blue;}\t\t\t/* 表单全新未操作 */\n    \tform .ng-dirty{background:#eee;}\t\t/* 表单已操作 */\n    \tform .ng-untouched{border-color:pink;}\t/* 表单未操作*/\n    \tform .ng-touched{border-color:purple}\t/* 表单已操作 */\n    `]\n})\n\nexport class ValidateFormGroupComponent{\n\tdata:string;\n\tmyForm: FormGroup;\n\tmodel:any = {\n\t\t\n\t}\n\n  \tconstructor(private router: RouterService, private fb: FormBuilder){ }\n  \t\n  \tngOnInit(){\n  \t\tthis.myForm = new FormGroup({\n\t\t\t'username': new FormControl('这里设置默认值', [\n\t\t\t\tValidators.required,\t\t\t// 非空验证\n\t\t\t\tValidators.minLength(4),\t\t// 最小长度\n\t\t\t\tValidators.maxLength(8),\t\t// 最大长度\n\t\t\t\tValidators.pattern('[0-9]{6}')\t// 正则验证\n      \t\t]),\n      \t\t'emails': new FormControl('填写邮箱', [\n      \t\t\tValidators.required,\n      \t\t\tValidators.email\t\t\t\t// 邮箱验证\n      \t\t]),\n      \t\t'address' : this.fb.group({\n\t\t\t\t  city : ['城市', [Validators.required,Validators.minLength(5)]],\n\t\t\t\tstreet : ['街道', Validators.required]\n\t\t\t})\n\t\t})\n  \t\tthis.model = this.myForm.value;\t// 获取所有表单数据\n  \t}\n  \t\n  \tonSubmit(formData,valid){\n  \t\tif(valid){\n  \t\t\tthis.data = formData;\n  \t\t}\n  \t}\n  \t\n  \t// 重置 form\n  \treset(){\n  \t\tthis.myForm.reset();\n  \t}\n  \t// 获取指定值\n  \tget userame(){\n  \t\treturn this.myForm.get('userame')\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/validate-form-group.component.ts';\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/validate-form-group.component.ts","// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\n// ===================================================== \n@Component({\n    template: `\n        <div class=\"samebox\">\n        \t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n        </div>\n        \n        <div class=\"lh30 mvvm-code samebox mt10\">\n\t\t\t<dl class=\"mvvm-list\">\n\t        \t<dt>表单验证: </dt>\n\t        </dl>\n        </div>\n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre mt10\">双向绑定数据 form: <s>{{ model | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <div class=\"mvvm-pre mt10\">提交表单后的 ngForm 数据: <s>{{ data | json }}</s></div>\n        \n        <hr class=\"_mt10_mb10x\">\n        \n        <form (ngSubmit)=\"onSubmit(f.value,f.valid)\" #f=\"ngForm\" class=\"samebox mt10\">\n\t\t\t<ul class=\"res-tr-tl clearfox _lh32\">\n\t\t\t\t<li>\n\t\t\t\t\t<h6 class=\"col-sm-20\">非空：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<input type=\"text\" name=\"summer\" class=\"_w200 mr10\"\n\t\t\t\t\t\t\t#summer=\"ngModel\"\n\t\t\t\t\t\t\t[(ngModel)]=\"model.summer\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div *ngIf=\"summer.invalid && (summer.dirty || summer.touched)\">\n\t\t\t\t\t\t\t<p *ngIf=\"summer.errors.required\">非空 </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt10\">\n\t\t\t\t\t<h6 class=\"col-sm-20\">长度验证：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<input type=\"text\" name=\"username\" class=\"_w200 mr10\"\n\t\t\t\t\t\t\t#name=\"ngModel\"\n\t\t\t\t\t\t\t[(ngModel)]=\"model.name\"\n\t\t\t\t\t\t\tminlength=\"6\"\n\t\t\t\t\t\t\tmaxlength=\"10\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n\t\t\t\t\t\t\t<p *ngIf=\"name.errors.minlength\">长度>= 6</p>\n\t\t\t\t\t\t\t<p *ngIf=\"name.errors.maxlength\">长度<= 10</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt10\">\n\t\t\t\t\t<h6 class=\"col-sm-20\">邮箱验证：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<input type=\"text\" name=\"email\" class=\"_w200 mr10\"\n\t\t\t\t\t\t\t#email=\"ngModel\"\n\t\t\t\t\t\t\t[(ngModel)]=\"model.email\"\n\t\t\t\t\t\t\temail\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n\t\t\t\t\t\t\t<p *ngIf=\"email.errors.email\">必须是邮箱</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt10\">\n\t\t\t\t\t<h6 class=\"col-sm-20\">正则验证：</h6>\n\t\t\t\t\t<div class=\"col-sm-80 _fl\">\n\t\t\t\t\t\t<input type=\"text\" name=\"num\" class=\"_w200 mr10\"\n\t\t\t\t\t\t\t#num=\"ngModel\"\n\t\t\t\t\t\t\t[(ngModel)]=\"model.number\"\n\t\t\t\t\t\t\tpattern = \"[/0-9/]{6}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div *ngIf=\"num.invalid && (num.dirty || num.touched)\">\n\t\t\t\t\t\t\t<p *ngIf=\"num.errors.pattern\">必须是数字,且长度为 6</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"mt20 res-btn\">\n\t\t\t\t\t<h6 class=\"col-sm-20\"></h6>\n\t\t\t\t\t<div class=\"col-sm-80\"><button class=\"btn-default _w200_f16_h40\">确认</button></div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</form>\n    `,\n    styles:[`\n    \tform .ng-valid{color:green;}\t\t\t/* 验证通过 */\n    \tform .ng-invalid{color:red}\t\t\t\t/* 验证不通过 */\n    \tform .ng-pending{font-weight:bold;}\n    \tform .ng-pristine{color:blue;}\t\t\t/* 表单全新未操作 */\n    \tform .ng-dirty{background:#eee;}\t\t/* 表单已操作 */\n    \tform .ng-untouched{border-color:pink;}\t/* 表单款操作*/\n    \tform .ng-touched{border-color:purple}\t/* 表单已操作 */\n    `]\n})\n\nexport class ValidateInnerComponent{\n\tdata:string;\n\tmodel:any = {}\n\n  \tconstructor(private router: RouterService){ }\n  \t\n  \tonSubmit(formData,valid){\n  \t\tif(valid){\n  \t\t\tif(valid){\t// 控件是有效\n\t  \t\t\tthis.data = formData;\n\t  \t\t}\n  \t\t}\n  \t}\n  \t\n  \tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/form/validate-inner.component.ts';\n\t}\n\t\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/form/validate-inner.component.ts"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["F:/my-template/angular/src/app/views/ng/service/service.component.ts","F:/my-template/angular/src/app/views/ng/service/service.module.ts","F:/my-template/angular/src/app/views/ng/service/service/my.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,yDAAyD;AACf;AAC1C,6DAA6D;AACD;AACX;AACjD,yDAAyD;AA4BzD;IAGC,0BAAoB,MAAqB,EAAS,EAAY;QAA1C,WAAM,GAAN,MAAM,CAAe;QAAS,OAAE,GAAF,EAAE,CAAU;IAAG,CAAC;IAElE,+BAAI,GAAJ;QACC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAClC,YAAY,CAAC,IAAI,GAAG,8BAA8B,CAAC;IACpD,CAAC;IAED,+BAAI,GAAJ;QACC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;IACrB,CAAC;IAED,gCAAK,GAAL;QACC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,kCAAO,GAAP;QACC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAClC,YAAY,CAAC,IAAI,GAAG,wCAAwC,CAAC;IAC9D,CAAC;IAED,oCAAS,GAAT;QACC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAClC,YAAY,CAAC,IAAI,GAAG,uCAAuC,CAAC;IAC7D,CAAC;IA1BW,gBAAgB;QA3B5B,wEAAS,CAAC;YACP,QAAQ,EAAE,gvCAsBZ;YACD,SAAS,EAAC,CAAC,sEAAS,CAAC,CAAC,uBAAuB;SAC7C,CAAC;yCAK2B,kFAAa,EAAY,sEAAS;OAHlD,gBAAgB,CA2B5B;IAAD,uBAAC;CAAA;AA3B4B;;;;;;;;;;;;;;;;;;;;;ACjCY;AACM;AACA;AAC/C,2DAA2D;AAE3D,iEAAiE;AACV;AACvD,oFAAoF;AAgBpF;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAfzB,uEAAQ,CAAC;YACT,OAAO,EAAE;gBACR,qEAAY;gBACZ,qEAAY,CAAC,QAAQ,CACpB;oBACC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4EAAgB,EAAE;iBAChD,CACD;aACD;YACD,YAAY,EAAE;gBACb,4EAAgB;aAChB;YACD,SAAS,EAAC,EAAG;YACb,OAAO,EAAE,CAAE,qEAAY,CAAE;SACzB,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACvBiB;AAG3C;IAEC;QAIA,SAAI,GAAU,OAAO,CAAC;QACtB,YAAO,GAAU,OAAO,CAAC;QACzB,WAAM,GAAW,IAAI,CAAC;IAJtB,CAAC;IAMD,wBAAI,GAAJ;QACC,KAAK,CAAC,QAAQ,CAAC;IAChB,CAAC;IAZW,SAAS;QADrB,yEAAU,EAAE;;OACA,SAAS,CAarB;IAAD,gBAAC;CAAA;AAbqB","file":"service.module.chunk.js","sourcesContent":["// ===================================================== \nimport { Component } from '@angular/core';\n// ===================================================== 公共服务\nimport { RouterService } from 'app/services/router.service';\nimport { MyService } from './service/my.service';\n// ===================================================== \n@Component({\n    template: `\n\t\t<div class=\"samebox\">\n\t\t\t<button class=\"btn-default\" (click) = \"component()\">查看本组件</button>\n\t\t\t<button class=\"btn-default\" (click) = \"service()\">查看服务</button>\n\t\t</div>\n\t\t<div class=\"lh30 mvvm-code mt10\">\n\t\t\t<dl class=\"mvvm-list samebox\">\n\t\t\t\t<dt>服务 </dt>\n\t\t\t\t<dd><b>constructor(private router: RouterService, public my:MyService)｛｝</b> 实例化服务</dd>\n\t\t\t</dl>\n\t\t\t\n\t\t\t<dl class=\"mvvm-list samebox mt10\">\n\t\t\t\t<dt>private ｜ public：</dt>\n\t\t\t\t<dd>private 声明的服务只能在  Class 类中使用，无法再 template 模块中使用</dd>\n\t\t\t\t<dd>public 声明的服务在 Class 类和模板中都可使用</dd>\n\t\t\t</dl>\n\t\t</div>\n\t\t<div class=\"samebox mt10\">\n\t\t\t<button class=\"btn-default\" (click) = \"play()\">获取服务中的属性</button>\n\t\t\t<button class=\"btn-default\" (click) = \"start()\">使用服务中的方法</button>\n\t\t</div>\n\t\t<pre class=\"mvvm-pre samebox mt10\">{{data | json}}</pre>\n\t`,\n\tproviders:[MyService]\t// 服务隔离, 只在本组件及其子组件树中可用\n})\n\nexport class ServiceComponent{\n\tdata;\n\t\n\tconstructor(private router: RouterService, public my:MyService){ }\n\t\n\tpipe(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/pipe/pipe/keys.pipe.ts';\n\t}\n\t\n\tplay(){\n\t\tthis.data = this.my;\n\t}\n\t\n\tstart(){\n\t\tthis.my.play();\n\t}\n\t\n\tservice(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/service/service/my.service.ts';\n\t}\n\n\tcomponent(){\n\t\tthis.router.go({ popup: 'code' });\n\t\tlocalStorage.code = 'views/ng/service/service.component.ts';\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/service/service.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n// ===================================================== 服务\n\n// ===================================================== 同一个模块的组件\nimport { ServiceComponent } from './service.component';\n// ======================================================================== NgModule\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(\n\t\t\t[\n\t\t\t\t{ path: 'service', component: ServiceComponent }\n\t\t\t]\n\t\t)\n\t],\n\tdeclarations: [\n\t\tServiceComponent\n\t],\n\tproviders:[ ],\t// 公共服务\n\texports: [ RouterModule ]\n})\nexport class ServiceModule { }\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/service/service.module.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MyService {\n\t\n\tconstructor(){\t// 可再注入其它内置的或自定义的服务\n\t\t\n\t}\n\t\n\tname:string = '自定义服务';\n\tversion:string = '1.0.0';\n\tisBack:boolean = true;\n\t\n\tplay(){\n\t\talert('服务中的方法')\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/my-template/angular/src/app/views/ng/service/service/my.service.ts"],"sourceRoot":"webpack:///"}